# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2019-04-18 15:13
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar_url', models.CharField(max_length=256, verbose_name='用户头像路径')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='用户手机号')),
                ('signature', models.CharField(max_length=50, null=True, verbose_name='用户签名')),
                ('gender', models.SmallIntegerField(choices=[(1, '男'), (2, '女')], default=1, verbose_name='用户性别')),
                ('email_active', models.BooleanField(default=False, verbose_name='用户邮箱绑定状态')),
            ],
            options={
                'verbose_name': '用户user',
                'verbose_name_plural': '用户user',
                'db_table': 'tb_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('content', models.CharField(max_length=200, verbose_name='评论内容')),
                ('like', models.IntegerField(default=0, verbose_name='点赞数')),
                ('is_show', models.BooleanField(default=True, verbose_name='是否展示')),
            ],
            options={
                'verbose_name': '评论信息表',
                'verbose_name_plural': '评论信息表',
                'db_table': 'tb_comment',
            },
        ),
        migrations.CreateModel(
            name='Comment_report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('reason', models.CharField(max_length=200, verbose_name='举报原因')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news.Comment', verbose_name='评论id')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='举报用户')),
            ],
            options={
                'verbose_name': '评论举报表',
                'verbose_name_plural': '评论举报表',
                'db_table': 'Comment_report',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('title', models.CharField(max_length=256, verbose_name='新闻标题')),
                ('source', models.CharField(max_length=64)),
                ('index_image_url', models.ImageField(null=True, upload_to='', verbose_name='新闻索引图片路径')),
                ('index_image_url_list', models.ImageField(null=True, upload_to='', verbose_name='新闻索引图片路径')),
                ('digest', models.CharField(max_length=256, null=True, verbose_name='新闻简要')),
                ('content', models.TextField(verbose_name='新闻内容')),
                ('clicks', models.IntegerField(default=0, verbose_name='文章点击数')),
                ('status', models.SmallIntegerField(choices=[(0, '审核通过'), (1, '审核中'), (2, '审核不通过')], default=0, verbose_name='文章审核状态')),
                ('reason', models.CharField(max_length=256, verbose_name='审核不通过原因')),
                ('report_time', models.DateTimeField(verbose_name='发布时间')),
                ('digest_label', models.CharField(max_length=256, verbose_name='新闻关键字')),
                ('is_spider', models.BooleanField(default=True, verbose_name='是否是爬取的新闻')),
                ('source_avatar_url', models.ImageField(default='null', upload_to='', verbose_name='来源用户的头像')),
            ],
            options={
                'verbose_name': '新闻表',
                'verbose_name_plural': '新闻表',
                'db_table': 'tb_news',
            },
        ),
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=64, verbose_name='新闻分类')),
            ],
            options={
                'verbose_name': '新闻分类',
                'verbose_name_plural': '新闻分类',
                'db_table': 'tb_news_category',
            },
        ),
        migrations.CreateModel(
            name='Search_keywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_wrods', models.CharField(max_length=128, verbose_name='搜索关键字')),
                ('search_times', models.IntegerField(verbose_name='搜索次数')),
            ],
            options={
                'verbose_name': ' 搜索关键字表',
                'verbose_name_plural': ' 搜索关键字表',
                'db_table': 'tb_search_keywords',
            },
        ),
        migrations.CreateModel(
            name='Slide_image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='轮播图标题')),
                ('url', models.CharField(max_length=128, verbose_name='轮播图图片url')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='图片是否显示')),
                ('new', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news.News', verbose_name='轮播的新闻id')),
            ],
            options={
                'verbose_name': '轮播广告表',
                'verbose_name_plural': '轮播广告表',
                'db_table': 'tb_slide_show',
            },
        ),
        migrations.CreateModel(
            name='User_Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news.News', verbose_name='新闻id')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户id')),
            ],
            options={
                'verbose_name': '用户收藏表',
                'verbose_name_plural': '用户收藏表',
                'db_table': 'tb_user_collection',
            },
        ),
        migrations.CreateModel(
            name='User_Fans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fans', to=settings.AUTH_USER_MODEL, verbose_name='粉丝')),
                ('follow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follows', to=settings.AUTH_USER_MODEL, verbose_name='关注')),
            ],
            options={
                'verbose_name': '用户关注表',
                'verbose_name_plural': '用户关注表',
                'db_table': 'tb_user_fans',
            },
        ),
        migrations.AddField(
            model_name='news',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='news.NewsCategory', verbose_name='新闻分类'),
        ),
        migrations.AddField(
            model_name='news',
            name='user',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='作者id'),
        ),
        migrations.AddField(
            model_name='comment',
            name='new',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='news.News', verbose_name='评论的新闻'),
        ),
        migrations.AddField(
            model_name='comment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subs', to='news.Comment', verbose_name='父评论的id'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='评论者'),
        ),
        migrations.AddField(
            model_name='user',
            name='collect_new',
            field=models.ManyToManyField(related_name='collected_user', through='news.User_Collection', to='news.News'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
